# This is current latest torchserve image, set specific version just in case of futre releases
FROM pytorch/torchserve:0.9.0-gpu AS torchserve-env

# Switch to root to install nvcc
USER root

# Install nvcc needed to compile custom VToonify cuda libraries
RUN apt-get update && apt-get install -y --no-install-recommends \
    wget \
    unzip \
    cuda-nvcc-12-1 \
    libcusparse-dev-12-1 \
    libcublas-dev-12-1 \
    libcusolver-dev-12-1 \
    && rm -rf /var/lib/apt/lists/*

# Go back to original user to dont run as root
USER model-server
# maybe necessary to access nvcc
# RUN usermod -a -G video model-server

WORKDIR crypsis-delizziosa-model/

# Install python dependencies
RUN pip install --upgrade pip
ADD requirements.txt requirements.txt
RUN pip install -r requirements.txt

# Adding config file needed for both running and compiling the model
ADD config.properties config.properties

FROM torchserve-env AS builder

USER 0

# Download the checkpoints
ADD scripts/download_checkpoints.sh download_checkpoints.sh
RUN ./download_checkpoints.sh

# Add required code
ADD model/ model/
ADD *.py .

# Create output folder for the .mar
RUN mkdir ./model_store

# Compile the model
RUN torch-model-archiver --model-name vToonify --version 1.0 \
    --serialized-file checkpoint/arcane/vtoonify_s_d.pt \
    --model-file model/vtoonify.py \
    --handler main \
    --export-path model_store \
    --extra-files util.py,model/vtoonify.py,model/dualstylegan.py,model/stylegan/stylegan_model.py,model/stylegan/op/__init__.py,model/stylegan/op/upfirdn2d_pkg.py,model/stylegan/op/fused_act.py,model/encoder/align_all_parallel.py,model/bisenet/bisnet_model.py,model/bisenet/resnet.py,model/stylegan/op/upfirdn2d_kernel.cu,model/stylegan/op/fused_bias_act.cpp,model/stylegan/op/fused_bias_act_kernel.cu,model/stylegan/op/upfirdn2d.cpp,model/stylegan/op/conv2d_gradfix.py,model/encoder/encoders/psp_encoders.py,model/encoder/encoders/helpers.py,checkpoint/arcane/vtoonify_s_d.pt,checkpoint/faceparsing.pth,checkpoint/encoder.pt,checkpoint/arcane/exstyle_code.npy,checkpoint/shape_predictor_68_face_landmarks.dat

FROM torchserve-env

# Adding config file
ADD config.properties config.properties

# Addin compile model from previous step
COPY --from=builder /home/model-server/crypsis-delizziosa-model/model_store/ model_store/

CMD ["torchserve","--start","--model-store=/home/model-server/crypsis-delizziosa-model/model_store","--models","vToonify=vToonify.mar","--ts-config","/home/model-server/crypsis-delizziosa-model/config.properties"]
